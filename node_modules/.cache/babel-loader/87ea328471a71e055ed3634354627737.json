{"ast":null,"code":"var _jsxFileName = \"/home/dev/conduit-app/conduit-app/src/components/common/pagination/pagination.jsx\";\nimport propTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ReactPaginate from \"react-paginate\";\nimport * as styled from \"./paginationStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  itemsCount,\n  pageSize,\n  onPageChange,\n  currentPage\n}) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    /*#__PURE__*/\n    // <ReactPaginate\n    //   previousLabel={\"Previous\"}\n    //   nextLabel={\"next\"}\n    //   breakLabel={\"...\"}\n    //   breakClassName={\"break-me\"}\n    //   pageCount={pages}\n    //   marginPagesDisplayed={2}\n    //   pageRangeDisplayed={5}\n    //   onPageChange={() => onPageChange(page)}\n    //   containerClassName={\"pagination\"}\n    //   subContainerClassName={\"pages pagination\"}\n    //   activeClassName={\"active\"}/>\n    // />\n    _jsxDEV(styled.PageWrapper, {\n      children: /*#__PURE__*/_jsxDEV(styled.PageUl, {\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(styled.PageLink, {\n            page: page,\n            currpage: currentPage,\n            onClick: () => onPageChange(page),\n            pagescount: pagesCount,\n            to: \"#\",\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = Pagination;\nPagination.propTypes = {\n  itemsCount: propTypes.number.isRequired,\n  pageSize: propTypes.number.isRequired,\n  currentPage: propTypes.number.isRequired,\n  onPageChange: propTypes.func.isRequired\n};\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/dev/conduit-app/conduit-app/src/components/common/pagination/pagination.jsx"],"names":["propTypes","_","ReactPaginate","styled","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","map","page","number","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,YAAxB;AAAsCC,EAAAA;AAAtC,CAAD,KAAyD;AAC1E,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;AACA,MAAIG,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;;AACtB,QAAMG,KAAK,GAAGX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd;;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,MAAD,CAAQ,WAAR;AAAA,6BACE,QAAC,MAAD,CAAQ,MAAR;AAAA,kBACGG,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT;AAAA,iCACE,QAAC,MAAD,CAAQ,QAAR;AACE,YAAA,IAAI,EAAEA,IADR;AAEE,YAAA,QAAQ,EAAEP,WAFZ;AAGE,YAAA,OAAO,EAAE,MAAMD,YAAY,CAACQ,IAAD,CAH7B;AAIE,YAAA,UAAU,EAAEN,UAJd;AAKE,YAAA,EAAE,EAAC,GALL;AAAA,sBAOGM;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,IAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAdF;AAgCD,CApCD;;KAAMX,U;AAsCNA,UAAU,CAACJ,SAAX,GAAuB;AACrBK,EAAAA,UAAU,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UADR;AAErBX,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UAFN;AAGrBT,EAAAA,WAAW,EAAER,SAAS,CAACgB,MAAV,CAAiBC,UAHT;AAIrBV,EAAAA,YAAY,EAAEP,SAAS,CAACkB,IAAV,CAAeD;AAJR,CAAvB;AAOA,eAAeb,UAAf","sourcesContent":["import propTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ReactPaginate from \"react-paginate\";\nimport * as styled from \"./paginationStyles\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    // <ReactPaginate\n    //   previousLabel={\"Previous\"}\n    //   nextLabel={\"next\"}\n    //   breakLabel={\"...\"}\n    //   breakClassName={\"break-me\"}\n    //   pageCount={pages}\n    //   marginPagesDisplayed={2}\n    //   pageRangeDisplayed={5}\n    //   onPageChange={() => onPageChange(page)}\n    //   containerClassName={\"pagination\"}\n    //   subContainerClassName={\"pages pagination\"}\n    //   activeClassName={\"active\"}/>\n    // />\n    <styled.PageWrapper>\n      <styled.PageUl>\n        {pages.map((page) => (\n          <li key={page}>\n            <styled.PageLink\n              page={page}\n              currpage={currentPage}\n              onClick={() => onPageChange(page)}\n              pagescount={pagesCount}\n              to=\"#\"\n            >\n              {page}\n            </styled.PageLink>\n          </li>\n        ))}\n      </styled.PageUl>\n    </styled.PageWrapper>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: propTypes.number.isRequired,\n  pageSize: propTypes.number.isRequired,\n  currentPage: propTypes.number.isRequired,\n  onPageChange: propTypes.func.isRequired,\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}