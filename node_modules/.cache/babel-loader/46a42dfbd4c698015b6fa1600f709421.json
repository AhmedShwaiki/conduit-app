{"ast":null,"code":"var _jsxFileName = \"/home/dev/conduit-app/conduit-app/src/components/common/pagination/pagination.jsx\";\nimport propTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ReactPaginate from \"react-paginate\";\nimport * as styled from \"./paginationStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  itemsCount,\n  pageSize,\n  onPageChange,\n  currentPage\n}) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n    previousLabel: \"Previous\",\n    nextLabel: \"next\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pages,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: () => onPageChange(page),\n    containerClassName: \"pagination\",\n    subContainerClassName: \"pages pagination\",\n    activeClassName: \"active\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) // <styled.PageWrapper>\n  //   <styled.PageUl>\n  //     {pages.map((page) => (\n  //       <li key={page}>\n  //         <styled.PageLink\n  //           page={page}\n  //           currpage={currentPage}\n  //           onClick={() => onPageChange(page)}\n  //           pagescount={pagesCount}\n  //           to=\"#\"\n  //         >\n  //           {page}\n  //         </styled.PageLink>\n  //       </li>\n  //     ))}\n  //   </styled.PageUl>\n  // </styled.PageWrapper>\n  ;\n};\n\n_c = Pagination;\nPagination.propTypes = {\n  itemsCount: propTypes.number.isRequired,\n  pageSize: propTypes.number.isRequired,\n  currentPage: propTypes.number.isRequired,\n  onPageChange: propTypes.func.isRequired\n};\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/dev/conduit-app/conduit-app/src/components/common/pagination/pagination.jsx"],"names":["propTypes","_","ReactPaginate","styled","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","number","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,YAAxB;AAAsCC,EAAAA;AAAtC,CAAD,KAAyD;AAC1E,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;AACA,MAAIG,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;;AACtB,QAAMG,KAAK,GAAGX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd;;AACA,sBACE,QAAC,aAAD;AACE,IAAA,aAAa,EAAE,UADjB;AAEE,IAAA,SAAS,EAAE,MAFb;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,cAAc,EAAE,UAJlB;AAKE,IAAA,SAAS,EAAEG,KALb;AAME,IAAA,oBAAoB,EAAE,CANxB;AAOE,IAAA,kBAAkB,EAAE,CAPtB;AAQE,IAAA,YAAY,EAAE,MAAML,YAAY,CAACO,IAAD,CARlC;AASE,IAAA,kBAAkB,EAAE,YATtB;AAUE,IAAA,qBAAqB,EAAE,kBAVzB;AAWE,IAAA,eAAe,EAAE;AAXnB;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BF;AAgCD,CApCD;;KAAMV,U;AAsCNA,UAAU,CAACJ,SAAX,GAAuB;AACrBK,EAAAA,UAAU,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UADR;AAErBV,EAAAA,QAAQ,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UAFN;AAGrBR,EAAAA,WAAW,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAHT;AAIrBT,EAAAA,YAAY,EAAEP,SAAS,CAACiB,IAAV,CAAeD;AAJR,CAAvB;AAOA,eAAeZ,UAAf","sourcesContent":["import propTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ReactPaginate from \"react-paginate\";\nimport * as styled from \"./paginationStyles\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <ReactPaginate\n      previousLabel={\"Previous\"}\n      nextLabel={\"next\"}\n      breakLabel={\"...\"}\n      breakClassName={\"break-me\"}\n      pageCount={pages}\n      marginPagesDisplayed={2}\n      pageRangeDisplayed={5}\n      onPageChange={() => onPageChange(page)}\n      containerClassName={\"pagination\"}\n      subContainerClassName={\"pages pagination\"}\n      activeClassName={\"active\"}\n    />\n    // <styled.PageWrapper>\n    //   <styled.PageUl>\n    //     {pages.map((page) => (\n    //       <li key={page}>\n    //         <styled.PageLink\n    //           page={page}\n    //           currpage={currentPage}\n    //           onClick={() => onPageChange(page)}\n    //           pagescount={pagesCount}\n    //           to=\"#\"\n    //         >\n    //           {page}\n    //         </styled.PageLink>\n    //       </li>\n    //     ))}\n    //   </styled.PageUl>\n    // </styled.PageWrapper>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: propTypes.number.isRequired,\n  pageSize: propTypes.number.isRequired,\n  currentPage: propTypes.number.isRequired,\n  onPageChange: propTypes.func.isRequired,\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}